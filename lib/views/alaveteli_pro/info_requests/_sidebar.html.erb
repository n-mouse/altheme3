<div id="right_column" class="sidebar sidebar--sticky right_column" role="complementary">
  <%= js_correspondence_navigation %>

  <% if @info_request.info_request_batch_id %>
    <%= render partial: "alaveteli_pro/info_request_batches/embargo_form",
               locals: {
                 info_request_batch: @info_request.info_request_batch,
                 info_request: @info_request
               } %>
  <% else %>
    <%= render partial: "alaveteli_pro/info_requests/embargo_form",
               locals: { info_request: @info_request } %>
  <% end %>

  <%= render partial: "alaveteli_pro/info_requests/batch",
             locals: { info_request: @info_request } %>

  <% unless state_transitions_empty?(@state_transitions) %>
    <div class="sidebar__section update-status">
      <h2><%= _("Status") %></h2>
      <div class="status-picker__current-status">
        <p>
          <i class="icon-standalone icon_<%= @info_request.calculate_status(true) %>"></i>
          <%= InfoRequest::State.short_description(@info_request.calculate_status(true)) %>
        </p>
      </div>
      <label class="houdini-label" for="input2"><%= _("Change status") %></label>
      <input class="houdini-input" type="checkbox" id="input2">
      <div class="status-picker houdini-target">
        <%= form_for(:classification,
                     url: alaveteli_pro_classifications_path(
                       url_title: @info_request.url_title
                     ),
                     method: :post,
                     html: { class: 'js-status-picker-form' }) do |f| %>
          <ul class="status-picker__options">
            <% @state_transitions.each do |group, transitions| %>
              <% transitions.each do |state, label| %>
                <li class="status-picker__option" tabindex="0">
                  <%= f.label :described_state, value: state do %>
                    <i class="icon-standalone icon_<%= state %>"></i>
                    <%# Note we force this to be unchecked, you can select the
                        same status again to reset it to "awaiting response"
                        after receiving an auto-response for example %>
                    <%= f.radio_button :described_state, state, checked: false %>
                    <%= label %>
                  <% end %>
                </li>
              <% end %>
            <% end %>
          </ul>
          <input type="submit" value="<%= _("Update") %>" class="status-picker__submit">
        <% end %>
      </div>
    </div>
  <% end %>
</div>
